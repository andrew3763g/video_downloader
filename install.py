#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–π —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π –¥–ª—è –∑–∞–≥—Ä—É–∑—á–∏–∫–∞ –≤–∏–¥–µ–æ
"""

import subprocess
import sys
import os
from pathlib import Path


def check_python_version():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–µ—Ä—Å–∏–∏ Python"""
    print("üêç –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤–µ—Ä—Å–∏—é Python...")
    print(f"–¢–µ–∫—É—â–∞—è –≤–µ—Ä—Å–∏—è: Python {sys.version}")


    if sys.version_info < (3, 9):
        print("‚ùå –¢—Ä–µ–±—É–µ—Ç—Å—è Python 3.9 –∏–ª–∏ –≤—ã—à–µ!")
        print("üìã –°–∫–∞—á–∞–π—Ç–µ —Å https://www.python.org/downloads/")
        return False

    if sys.version_info < (3, 10):
        print("‚ö†Ô∏è –†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è Python 3.10+ –¥–ª—è –ª—É—á—à–µ–π —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏")
    else:
        print("‚úÖ –í–µ—Ä—Å–∏—è Python –ø–æ–¥—Ö–æ–¥–∏—Ç")

    return True


def install_package(package_name, description=""):
    """–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø–∞–∫–µ—Ç–∞ —á–µ—Ä–µ–∑ pip"""
    try:
        print(f"‚¨áÔ∏è –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º {package_name}...")
        if description:
            print(f"   {description}")

        result = subprocess.run([
            sys.executable, '-m', 'pip', 'install', '--upgrade', package_name
        ], capture_output=True, text=True, check=True)

        print(f"‚úÖ {package_name} —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω —É—Å–ø–µ—à–Ω–æ")
        return True

    except subprocess.CalledProcessError as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ {package_name}: {e.stderr}")
        return False
    except Exception as e:
        print(f"‚ùå –ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ —É—Å—Ç–∞–Ω–æ–≤–∫–µ {package_name}: {e}")
        return False


def create_config_if_missing():
    """–°–æ–∑–¥–∞–Ω–∏–µ config.yaml –µ—Å–ª–∏ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç"""
    config_path = Path("config.yaml")

    if config_path.exists():
        print("‚úÖ config.yaml —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")
        return

    print("üìù –°–æ–∑–¥–∞–µ–º config.yaml...")

    config_content = """# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–æ–Ω–Ω—ã–π —Ñ–∞–π–ª –¥–ª—è –∑–∞–≥—Ä—É–∑—á–∏–∫–∞ –≤–∏–¥–µ–æ
# –û—Å–Ω–æ–≤–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
download_settings:
  download_directory: "Downloads"
  max_concurrent_downloads: 3
  max_file_size_mb: 500
  write_subtitles: true
  write_auto_subtitles: false

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –∫–∞—á–µ—Å—Ç–≤–∞ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
quality_settings:
  max_video_height: 1080
  audio_quality: "192"
  preferred_video_codec: "h264"
  preferred_audio_codec: "aac"

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–ª–µ–π–ª–∏—Å—Ç–æ–≤
playlist_settings:
  max_playlist_items: 100
  create_playlist_folders: true
  download_playlists_by_default: false

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–µ—Ç–∏
network_settings:
  socket_timeout: 30
  http_chunk_size: 10485760
  retries: 5
  prefer_ipv6: false

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging_settings:
  level: "INFO"
  max_log_file_size: 10
  backup_count: 5
  console_output: true
"""

    try:
        with open(config_path, 'w', encoding='utf-8') as f:
            f.write(config_content)
        print("‚úÖ config.yaml —Å–æ–∑–¥–∞–Ω")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è config.yaml: {e}")


def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏"""
    print("üöÄ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π –¥–ª—è –∑–∞–≥—Ä—É–∑—á–∏–∫–∞ –≤–∏–¥–µ–æ")
    print("=" * 60)

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ Python
    if not check_python_version():
        input("–ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –≤—ã—Ö–æ–¥–∞...")
        return

    print("\nüì¶ –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –ø–∞–∫–µ—Ç—ã...")

    # –°–ø–∏—Å–æ–∫ –ø–∞–∫–µ—Ç–æ–≤ –¥–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏
    packages = [
        ("pip", "–ú–µ–Ω–µ–¥–∂–µ—Ä –ø–∞–∫–µ—Ç–æ–≤ Python"),
        ("yt-dlp", "–ó–∞–≥—Ä—É–∑—á–∏–∫ –≤–∏–¥–µ–æ —Å YouTube –∏ –¥—Ä—É–≥–∏—Ö –ø–ª–∞—Ç—Ñ–æ—Ä–º"),
        ("pyyaml", "–û–±—Ä–∞–±–æ—Ç–∫–∞ YAML –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–æ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤"),
    ]

    success_count = 0

    for package, description in packages:
        if install_package(package, description):
            success_count += 1
        print()

    print("=" * 60)
    print(f"üìä –£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ –ø–∞–∫–µ—Ç–æ–≤: {success_count}/{len(packages)}")

    if success_count == len(packages):
        print("‚úÖ –í—Å–µ –ø–∞–∫–µ—Ç—ã —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ!")

        # –°–æ–∑–¥–∞–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–æ–Ω–Ω—ã–π —Ñ–∞–π–ª
        create_config_if_missing()

        print("\nüéâ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!")
        print("üìù –¢–µ–ø–µ—Ä—å –º–æ–∂–µ—Ç–µ –∑–∞–ø—É—Å—Ç–∏—Ç—å: python main.py")

    else:
        print("‚ö†Ô∏è –ù–µ–∫–æ—Ç–æ—Ä—ã–µ –ø–∞–∫–µ—Ç—ã –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–∏–ª–∏—Å—å")
        print("üîß –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –≤—Ä—É—á–Ω—É—é:")
        print("   pip install yt-dlp pyyaml")

    input("\n–ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –≤—ã—Ö–æ–¥–∞...")


if __name__ == "__main__":
    main()