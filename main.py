import os
import csv
import datetime
import re
from yt_dlp import YoutubeDL

def check_yt_dlp_version():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ –∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ yt-dlp"""
    try:
        import subprocess
        result = subprocess.run(['pip', 'show', 'yt-dlp'],
                              capture_output=True, text=True)
        if result.returncode == 0:
            for line in result.stdout.split('\n'):
                if line.startswith('Version:'):
                    version = line.split(':')[1].strip()
                    print(f"üì¶ –í–µ—Ä—Å–∏—è yt-dlp: {version}")
                    break
        else:
            print("‚ö†Ô∏è yt-dlp –Ω–µ –Ω–∞–π–¥–µ–Ω")
    except Exception:
        print("‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –≤–µ—Ä—Å–∏—é yt-dlp")

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø—É—Ç–µ–π
DOWNLOAD_DIR = os.path.join(os.getcwd(), 'Downloads')
LOG_FILE = os.path.join(os.getcwd(), 'downloads_log.csv')


def setup_directories():
    """–°–æ–∑–¥–∞–Ω–∏–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –ø–∞–ø–æ–∫ –∏ —Ñ–∞–π–ª–æ–≤"""
    # –°–æ–∑–¥–∞–µ–º –ø–∞–ø–∫—É –¥–ª—è –∑–∞–≥—Ä—É–∑–æ–∫, –µ—Å–ª–∏ –µ—ë –Ω–µ—Ç
    os.makedirs(DOWNLOAD_DIR, exist_ok=True)
    print(f"üìÅ –ü–∞–ø–∫–∞ –∑–∞–≥—Ä—É–∑–æ–∫: {DOWNLOAD_DIR}")

    # –°–æ–∑–¥–∞–µ–º —Ñ–∞–π–ª –∂—É—Ä–Ω–∞–ª–∞ —Å –∑–∞–≥–æ–ª–æ–≤–∫–∞–º–∏, –µ—Å–ª–∏ –µ–≥–æ –Ω–µ—Ç
    if not os.path.isfile(LOG_FILE):
        with open(LOG_FILE, mode='w', newline='', encoding='utf-8') as f:
            writer = csv.writer(f)
            writer.writerow([
                '–§–æ—Ä–º–∞—Ç', '–í—Ä–µ–º—è –∑–∞–≥—Ä—É–∑–∫–∏', '–ò—Å—Ç–æ—á–Ω–∏–∫', 'URL', '–ù–∞–∑–≤–∞–Ω–∏–µ',
                '–¢–µ–≥–∏', '–ü—É—Ç—å –∫ —Ñ–∞–π–ª—É',
                '–ü–ª–µ–π–ª–∏—Å—Ç', '–ó–∞–≥—Ä—É–∑–∏–ª', '–ê–≤—Ç–æ—É–¥–∞–ª–µ–Ω–∏–µ',
                '–ü—Ä–æ–∫—Å–∏', '–ó–∞–º–µ—Ç–∫–∏'
            ])
        print(f"üìã –°–æ–∑–¥–∞–Ω —Ñ–∞–π–ª –∂—É—Ä–Ω–∞–ª–∞: {LOG_FILE}")
    else:
        print(f"üìã –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π –∂—É—Ä–Ω–∞–ª: {LOG_FILE}")


def get_video_source(url):
    """–û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –∏—Å—Ç–æ—á–Ω–∏–∫–∞ –≤–∏–¥–µ–æ –ø–æ URL"""
    url_lower = url.lower()

    if 'youtube.com' in url_lower or 'youtu.be' in url_lower:
        return 'YouTube'
    elif 'tiktok.com' in url_lower:
        return 'TikTok'
    elif 'facebook.com' in url_lower or 'fb.watch' in url_lower:
        return 'Facebook'
    elif 'instagram.com' in url_lower:
        return 'Instagram'
    elif 'twitter.com' in url_lower or 'x.com' in url_lower:
        return 'Twitter/X'
    elif 'vk.com' in url_lower or 'vk.ru' in url_lower:
        return 'VK'
    else:
        return '–î—Ä—É–≥–æ–µ'


def sanitize_filename(filename):
    """–û—á–∏—Å—Ç–∫–∞ –∏–º–µ–Ω–∏ —Ñ–∞–π–ª–∞ –æ—Ç –Ω–µ–¥–æ–ø—É—Å—Ç–∏–º—ã—Ö —Å–∏–º–≤–æ–ª–æ–≤"""
    # –£–±–∏—Ä–∞–µ–º –Ω–µ–¥–æ–ø—É—Å—Ç–∏–º—ã–µ —Å–∏–º–≤–æ–ª—ã –¥–ª—è –∏–º–µ–Ω —Ñ–∞–π–ª–æ–≤
    filename = re.sub(r'[<>:"/\\|?*]', '', filename)
    # –û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º –¥–ª–∏–Ω—É –∏–º–µ–Ω–∏ —Ñ–∞–π–ª–∞
    if len(filename) > 200:
        filename = filename[:200]
    return filename.strip()


def log_download(info_dict, output_format, url, file_path, downloaded_by='Andrey',
                 playlist_name='', proxy_used=False, notes=''):
    """–ó–∞–ø–∏—Å—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Å–∫–∞—á–∞–Ω–Ω–æ–º –≤–∏–¥–µ–æ –≤ –∂—É—Ä–Ω–∞–ª"""
    timestamp = datetime.datetime.now().strftime('%Y-%m-%d %H:%M:%S')

    # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –∏–∑ —Å–ª–æ–≤–∞—Ä—è
    title = info_dict.get('title', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ')
    tags = ', '.join(info_dict.get('tags', [])) if info_dict.get('tags') else '–ù–µ—Ç —Ç–µ–≥–æ–≤'

    try:
        with open(LOG_FILE, mode='a', newline='', encoding='utf-8') as f:
            writer = csv.writer(f)
            writer.writerow([
                output_format,
                timestamp,
                get_video_source(url),
                url,
                title,
                tags,
                file_path,
                playlist_name,
                downloaded_by,
                '',  # –ê–≤—Ç–æ—É–¥–∞–ª–µ–Ω–∏–µ (–∑–∞–ø–æ–ª–Ω—è–µ—Ç—Å—è –≤—Ä—É—á–Ω—É—é –ø—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏)
                '–î–∞' if proxy_used else '–ù–µ—Ç',
                notes
            ])
        print(f"üìù –ó–∞–ø–∏—Å—å –¥–æ–±–∞–≤–ª–µ–Ω–∞ –≤ –∂—É—Ä–Ω–∞–ª")
        return True
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø–∏—Å–∏ –≤ –∂—É—Ä–Ω–∞–ª: {e}")
        return False


def download_video(url, output_format='mp4', downloaded_by='Andrey',
                   playlist_name='', proxy_used=False, notes=''):
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –∑–∞–≥—Ä—É–∑–∫–∏ –≤–∏–¥–µ–æ"""

    print(f"üîÑ –ù–∞—á–∏–Ω–∞–µ–º –∑–∞–≥—Ä—É–∑–∫—É —Å {get_video_source(url)}...")
    print(f"üîó URL: {url}")
    print(f"üìπ –§–æ—Ä–º–∞—Ç: {output_format}")

    # –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–ª—è yt-dlp
    ydl_opts = {
        'format': 'bestaudio/best' if output_format == 'mp3' else 'best',
        'outtmpl': os.path.join(DOWNLOAD_DIR, '%(title)s.%(ext)s'),
        'quiet': False,  # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—Ä–æ–≥—Ä–µ—Å—Å –∑–∞–≥—Ä—É–∑–∫–∏
        'no_warnings': False,
        'noplaylist': True,  # –°–∫–∞—á–∏–≤–∞–µ–º —Ç–æ–ª—å–∫–æ –æ–¥–Ω–æ –≤–∏–¥–µ–æ, –Ω–µ –≤–µ—Å—å –ø–ª–µ–π–ª–∏—Å—Ç
    }

    # –î–æ–±–∞–≤–ª—è–µ–º –ø–æ—Å—Ç–æ–±—Ä–∞–±–æ—Ç–∫—É –¥–ª—è MP3
    if output_format == 'mp3':
        ydl_opts['postprocessors'] = [{
            'key': 'FFmpegExtractAudio',
            'preferredcodec': 'mp3',
            'preferredquality': '192',
        }]

    try:
        with YoutubeDL(ydl_opts) as ydl:
            print("üìä –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –≤–∏–¥–µ–æ...")

            # –°–Ω–∞—á–∞–ª–∞ –ø–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –±–µ–∑ –∑–∞–≥—Ä—É–∑–∫–∏
            info_dict = ydl.extract_info(url, download=False)

            if not info_dict:
                print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –≤–∏–¥–µ–æ")
                return False

            # –ü–æ–ª—É—á–∞–µ–º –∏ –æ—á–∏—â–∞–µ–º –Ω–∞–∑–≤–∞–Ω–∏–µ
            original_title = info_dict.get('title', 'Unknown_Video')
            clean_title = sanitize_filename(original_title)

            # –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–µ —Ñ–∞–π–ª–∞
            if output_format == 'mp3':
                ext = 'mp3'
            else:
                ext = info_dict.get('ext', 'mp4')

            # –§–æ—Ä–º–∏—Ä—É–µ–º –ø–æ–ª–Ω—ã–π –ø—É—Ç—å –∫ —Ñ–∞–π–ª—É
            filename = f"{clean_title}.{ext}"
            expected_file_path = os.path.join(DOWNLOAD_DIR, filename)

            print(f"üìÑ –ù–∞–∑–≤–∞–Ω–∏–µ: {original_title}")
            print(f"üíæ –§–∞–π–ª –±—É–¥–µ—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω –∫–∞–∫: {filename}")

            # –¢–µ–ø–µ—Ä—å –∑–∞–≥—Ä—É–∂–∞–µ–º –≤–∏–¥–µ–æ
            print("‚¨áÔ∏è –ó–∞–≥—Ä—É–∂–∞–µ–º –≤–∏–¥–µ–æ...")
            ydl.download([url])

            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Ñ–∞–π–ª –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ —Å–∫–∞—á–∞–ª—Å—è
            if os.path.exists(expected_file_path):
                actual_file_path = expected_file_path
                print(f"‚úÖ –§–∞–π–ª —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω: {filename}")
            else:
                # –ò—â–µ–º —Ñ–∞–π–ª –≤ –ø–∞–ø–∫–µ –∑–∞–≥—Ä—É–∑–æ–∫ (–∏–Ω–æ–≥–¥–∞ yt-dlp –º–µ–Ω—è–µ—Ç –∏–º—è)
                downloaded_files = []
                for file in os.listdir(DOWNLOAD_DIR):
                    file_path = os.path.join(DOWNLOAD_DIR, file)
                    if os.path.isfile(file_path):
                        file_time = os.path.getctime(file_path)
                        downloaded_files.append((file_time, file_path, file))

                if downloaded_files:
                    # –ë–µ—Ä–µ–º —Å–∞–º—ã–π –Ω–æ–≤—ã–π —Ñ–∞–π–ª
                    downloaded_files.sort(reverse=True)
                    actual_file_path = downloaded_files[0][1]
                    actual_filename = downloaded_files[0][2]
                    print(f"‚úÖ –§–∞–π–ª –∑–∞–≥—Ä—É–∂–µ–Ω –∫–∞–∫: {actual_filename}")
                else:
                    print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ –∑–∞–≥—Ä—É–∂–µ–Ω–Ω—ã–π —Ñ–∞–π–ª")
                    return False

            # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –≤ –∂—É—Ä–Ω–∞–ª
            print("üìù –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –≤ –∂—É—Ä–Ω–∞–ª...")
            log_success = log_download(
                info_dict=info_dict,
                output_format=output_format,
                url=url,
                file_path=actual_file_path,
                downloaded_by=downloaded_by,
                playlist_name=playlist_name,
                proxy_used=proxy_used,
                notes=notes
            )

            if log_success:
                print("üéâ –ó–∞–≥—Ä—É–∑–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!")
                return True
            else:
                print("‚ö†Ô∏è –§–∞–π–ª –∑–∞–≥—Ä—É–∂–µ–Ω, –Ω–æ –Ω–µ –∑–∞–ø–∏—Å–∞–Ω –≤ –∂—É—Ä–Ω–∞–ª")
                return True

    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ: {e}")
        return False


def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≥—Ä–∞–º–º—ã"""
    print("üé¨ –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π –∑–∞–≥—Ä—É–∑—á–∏–∫ –≤–∏–¥–µ–æ –∏–∑ —Å–æ—Ü–∏–∞–ª—å–Ω—ã—Ö —Å–µ—Ç–µ–π")
    print("=" * 60)

    # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –æ–∫—Ä—É–∂–µ–Ω–∏—è
    setup_directories()
    print()

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤–µ—Ä—Å–∏—é yt-dlp
    check_yt_dlp_version()

    try:
        # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        url = input("üîó –í–≤–µ–¥–∏—Ç–µ URL –≤–∏–¥–µ–æ: ").strip()

        if not url:
            print("‚ùå URL –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—É—Å—Ç—ã–º!")
            return

        print("\nüìπ –í—ã–±–µ—Ä–∏—Ç–µ —Ñ–æ—Ä–º–∞—Ç:")
        print("1. MP4 (–≤–∏–¥–µ–æ)")
        print("2. MP3 (—Ç–æ–ª—å–∫–æ –∞—É–¥–∏–æ)")

        format_choice = input("–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä (1 –∏–ª–∏ 2): ").strip()

        if format_choice == '2':
            output_format = 'mp3'
        else:
            output_format = 'mp4'

        # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
        notes = input("üìù –ó–∞–º–µ—Ç–∫–∏ (–Ω–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ): ").strip()

        print("\n" + "=" * 60)

        # –ó–∞–ø—É—Å–∫–∞–µ–º –∑–∞–≥—Ä—É–∑–∫—É
        success = download_video(
            url=url,
            output_format=output_format,
            notes=notes
        )

        if success:
            print("\nüéâ –ü—Ä–æ–≥—Ä–∞–º–º–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!")
        else:
            print("\n‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ")

    except KeyboardInterrupt:
        print("\n\n‚èπÔ∏è –ó–∞–≥—Ä—É–∑–∫–∞ –ø—Ä–µ—Ä–≤–∞–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º")
    except Exception as e:
        print(f"\n‚ùå –ù–µ–ø—Ä–µ–¥–≤–∏–¥–µ–Ω–Ω–∞—è –æ—à–∏–±–∫–∞: {e}")


if __name__ == "__main__":
    main()